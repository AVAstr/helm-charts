{{- if .Values.loadbalancer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keydb.fullname" . }}-loadbalancer
  labels:
    {{- include "keydb.loadbalancer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.loadbalancer.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "keydb.loadbalancer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8404"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keydb.loadbalancer.labels" . | nindent 8 }}
    spec:
      enableServiceLinks: false
      setHostnameAsFQDN: true
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keydb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.loadbalancer.podSecurityContext | nindent 8 }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if or .Values.tlsCerts.create }}
      initContainers:
        - name: tls
          image: "{{ .Values.loadbalancer.image.repository }}:{{ .Values.loadbalancer.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.loadbalancer.image.pullPolicy }}
          command:
            - /bin/sh
            - /entrypoint.d/haproxy.sh
          volumeMounts:
            - name: command
              mountPath: /entrypoint.d
              readOnly: true
            - name: run
              mountPath: /run
            - name: tlscerts
              mountPath: /etc/ssl/tlscerts
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-loadbalancer
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          image: "{{ .Values.loadbalancer.image.repository }}:{{ .Values.loadbalancer.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.loadbalancer.image.pullPolicy }}
          # command: ["sleep","6000"]
          ports:
            - name: keydb
              containerPort: 6379
              protocol: TCP
            {{- if .Values.tlsCerts.create }}
            - name: keydb-tls
              containerPort: 6380
              protocol: TCP
            {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            tcpSocket:
              port: {{  include "keydb.port" . }}
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            tcpSocket:
              port: {{  include "keydb.port" . }}
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: common-config
              mountPath: /usr/local/etc/haproxy
            - name: run
              mountPath: /run
          {{- if or .Values.tlsCerts.create }}
            - name: tlscerts
              mountPath: /etc/ssl/tlscerts
          {{- end }}
          resources:
            {{- toYaml .Values.loadbalancer.resources | nindent 12 }}
      {{- with .Values.loadbalancer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        {{- include "affinities.loadbalancer.pods" . | nindent 8 }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: common-config
          secret:
            secretName: {{ include "keydb.fullname" . }}
            defaultMode: 256
            items:
              - key: haproxy.cfg
                path: haproxy.cfg
        - name: command
          configMap:
            name: {{ include "keydb.fullname" . }}
            defaultMode: 360
        - name: run
          emptyDir:
            medium: Memory
      {{- if .Values.tlsCerts.create }}
        - name: tlscerts
          secret:
            secretName: {{ include "keydb.fullname" . }}-server-tls
            defaultMode: 256
      {{- end }}
{{- end }}
