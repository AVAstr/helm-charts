apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "link-common.fullname" . }}
  labels:
    {{- include "link-common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "link-common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- if .Values.wireguard.enabled }}
        checksum/wg: {{ include "link-common-wireguard.conf" . | sha256sum }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and .Values.wireguard.metrics.enabled .Values.wireguard.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9586"
      {{- end}}
      labels:
        {{- include "link-common.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: false
      enableServiceLinks: false
      serviceAccountName: {{ include "link-common.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.wireguard.enabled }}
        - name: wireguard
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          image: "{{ .Values.wireguard.image.repository }}:{{ .Values.wireguard.image.tag }}"
          imagePullPolicy: {{ .Values.wireguard.image.pullPolicy }}
          command: ["/entrypoint.d/wireguard.sh"]
          volumeMounts:
            - name: command
              mountPath: /entrypoint.d
              readOnly: true
            - name: wireguard
              mountPath: /etc/wireguard
              readOnly: true
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/entrypoint.d/haproxy.sh"]
          ports:
            - name: stats
              containerPort: 8404
              protocol: TCP
            {{- if .Values.wireguard.enabled }}
            - name: wg
              containerPort: 51820
              {{- if .Values.wireguard.wireguardPort }}
              hostPort: {{ .Values.wireguard.wireguardPort | int }}
              {{- end }}
              protocol: UDP
            - name: wg-health
              containerPort: 51820
              {{- if .Values.wireguard.wireguardPort }}
              hostPort: {{ .Values.wireguard.wireguardPort | int }}
              {{- end }}
              protocol: TCP
            {{- end }}
            {{- range $key, $value := .Values.service.ports }}
            - name: {{ .name | trunc 15 }}
              containerPort: {{ .port }}
              protocol: TCP
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: command
              mountPath: /entrypoint.d
              readOnly: true
            - name: config
              mountPath: /usr/local/etc/haproxy
            {{- if .Values.certManager.createCerts }}
            - name: tlscerts
              mountPath: /etc/ssl/tlscerts
            {{- end }}
            - name: run
              mountPath: /run
        {{- if and .Values.wireguard.enabled .Values.wireguard.metrics.enabled }}
        - name: wireguard-metrics
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          image: "{{ .Values.wireguard.metrics.image.repository }}:{{ .Values.wireguard.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.wireguard.metrics.image.pullPolicy }}
          args:
            - --port=9586
            - --interfaces=wg0
            - --extract_names_config_files=/etc/wireguard/wg0.conf
          ports:
            - name: metrics
              containerPort: 9586
              protocol: TCP
          volumeMounts:
            - name: wireguard
              mountPath: /etc/wireguard
              readOnly: true
        {{- end }}
      volumes:
        - name: command
          configMap:
            name: {{ include "link-common.fullname" . }}
            defaultMode: 365
            items:
              - key: haproxy.sh
                path: haproxy.sh
              - key: wireguard.sh
                path: wireguard.sh
        - name: config
          configMap:
            name: {{ include "link-common.fullname" . }}
            defaultMode: 288
            items:
              - key: haproxy.cfg
                path: haproxy.cfg
        {{- if .Values.certManager.createCerts }}
        - name: tlscerts
          secret:
            secretName: {{ include "link-common.fullname" . }}-server
            defaultMode: 288
        {{- end }}
        {{- if .Values.wireguard.enabled }}
        - name: wireguard
          secret:
            secretName: {{ include "link-common.fullname" . }}
            defaultMode: 256
            items:
              - key: wg0.conf
                path: wg0.conf
        {{- end }}
        - name: run
          emptyDir:
            medium: Memory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
